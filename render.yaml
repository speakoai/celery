services:
  - type: worker
    name: celery-worker
    region: virginia
    runtime: python
    buildCommand: "pip install -r requirements.txt && python -m playwright install --with-deps chromium"
    startCommand: "celery --app tasks.celery_app worker --loglevel info --concurrency 4 --events"
    autoDeploy: true
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
          name: speako-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: speako-cache
          type: redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      # OpenAI (worker-only)
      - key: OPENAI_API_KEY
        fromSecret: OPENAI_API_KEY
      - key: OPENAI_KNOWLEDGE_MODEL
        value: gpt-4o-mini
      # Cloudflare R2 (S3-compatible)
      - key: R2_ACCESS_KEY_ID
        fromSecret: R2_ACCESS_KEY_ID
      - key: R2_SECRET_ACCESS_KEY
        fromSecret: R2_SECRET_ACCESS_KEY
      - key: R2_ENDPOINT_URL
        sync: false
      - key: R2_BUCKET_NAME
        sync: false
      - key: R2_PUBLIC_BASE_URL
        value: https://assets.speako.ai
      # Scraping controls (worker-only)
      - key: SCRAPE_ALLOWED_HOSTS
        sync: false
      - key: SCRAPE_TIMEOUT_MS
        value: "20000"
      - key: SCRAPE_USER_AGENT
        sync: false
      - key: SCRAPE_SAVE_RAW_HTML
        value: "false"
      - key: SCRAPE_ENABLE_JS
        value: "false"
      - key: SCRAPE_JS_TIMEOUT_MS
        value: "30000"
      - key: SCRAPE_JS_EXTRA_WAIT_MS
        value: "1000"
  - type: web
    name: app
    region: virginia
    runtime: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "gunicorn app:app"
    autoDeploy: true
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      # API auth
      - key: API_SECRET_KEY
        fromSecret: API_SECRET_KEY
      # Cloudflare R2 for uploads (web needs these)
      - key: R2_ACCESS_KEY_ID
        fromSecret: R2_ACCESS_KEY_ID
      - key: R2_SECRET_ACCESS_KEY
        fromSecret: R2_SECRET_ACCESS_KEY
      - key: R2_ENDPOINT_URL
        sync: false
      - key: R2_BUCKET_NAME
        sync: false
      - key: R2_PUBLIC_BASE_URL
        value: https://assets.speako.ai

  - type: web
    name: flower
    region: virginia
    plan: free
    runtime: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "celery flower --app tasks.celery_app --loglevel info --address=0.0.0.0 --port=5555 --basic_auth=user:password --broker=$CELERY_BROKER_URL --persistent=True --db=flower.db"
    autoDeploy: true
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: celery-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          name: celery-redis
          type: redis
          property: connectionString

  - type: redis
    name: celery-redis
    region: virginia
    plan: starter
    maxmemoryPolicy: noeviction
    ipAllowList: []

  - type: cron
    name: availability-task-dispatch
    region: virginia
    schedule: "0 0 1 1 *"
    runtime: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "PYTHONPATH=. python dispatch/availability_tasks_dispatch.py"
    autoDeploy: true
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
          name: speako-db
          property: connectionString

  - type: web
    name: cache-viewer
    region: virginia
    runtime: python
    plan: starter
    buildCommand: pip install -r requirements.txt
    startCommand: gunicorn cache_viewer:app
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: speako-cache
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
          name: speako-db
          property: connectionString
    autoDeploy: true

  - type: cron
    name: gen-availability-cron-aus
    region: virginia
    env: python
    schedule: "0 * * * *" # runs every hour, so if it reach a timezone of anyting inside jobs dict, it trigger the worker
    buildCommand: "pip install -r requirements.txt"
    startCommand: "PYTHONPATH=. python dispatch/gen_availability_dispatch.py"
    envVars:
      - key: CELERY_BROKER_URL
        fromService:
          name: celery-redis
          type: redis
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: speako-cache
          property: connectionString
      - key: DATABASE_URL
        fromDatabase:
          name: speako-db
          property: connectionString

